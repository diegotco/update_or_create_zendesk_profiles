# The goal of this module is to update variables on the Zendesk user profiles. 
import os
import requests


# Zendesk subdomain.
subdomain = '' # For example: acme.zendesk.com. Your company set it.

# Load the user and the API Key from the .env file.
with open(".env") as f:
    for line in f:
        key, value = line.strip().split("=")
        os.environ[key] = value

# Access the user.
user = os.getenv("USER")

# Access the API key.
api_key = os.getenv("API_KEY")

# Users id list that comes from a text file that was generated by the "looking_users_in_zd.py" script file.
id_list = [] 

# Open the text file with all the vip email users on it.
with open("zd_id_users.txt", "r", encoding='utf-8-sig') as f:
    for line in f:
        if len(line) > 1:
            id_list.append(line.strip())

for id in id_list:

    # Load the user and the API Key from the .env file.
    with open(".env") as f:
        for line in f:
            key, value = line.strip().split("=")
            os.environ[key] = value

    # Access the user.
    user = os.getenv("USER")

    # Access the API key.
    api_key = os.getenv("API_KEY")

    # Set the request parameters.
    url = f'https://{subdomain}.zendesk.com/api/v2/users/'+ str(id) + '.json'
    user = user + '/token'
    pwd = api_key

    # Do the HTTP get request with try/except.
    try:
        response = requests.get(url, auth=(user, pwd))
    except:
        print("Something in the URL call or in the request module is wrong. Please check them.")
        exit()

    # Check for HTTP codes other than 200.
    if response.status_code != 200:
        print('Status:', response.status_code, 'Problem with the request. Exiting.')
        exit()

    # A) Converting the JSON object into a Python dictionary for future modifications.
    json_object = response.json()

    # The following two dictionary updates are only examples. You should check your own data and change de data that you want.
    # 1) Update the "tags" variable.
    json_object["user"]["tags"].append(tags)

    # 2) Update the "vip_user" variable.
    json_object["user"]["user_fields"]["vip_user"] = True

    # B) Send the modified/updated JSON object back to the server with PUT method. 
    # Zendesk do not accept PATCH methodo, only PUT.
    try:
        response = requests.put(url, auth=(user, pwd), json=json_object)
    except:
        print("Something in the URL call or in the request module is wrong. Please check them.")
        exit()

    # Check for HTTP codes other than 200.
    if response.status_code != 200:
        print('Status:', response.status_code, 'Problem with the request. Exiting.')
        exit()

